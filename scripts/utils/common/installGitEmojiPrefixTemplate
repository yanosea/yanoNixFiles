#!/usr/bin/env bash

# color settings
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # no Color

echo -e "${YELLOW}Git Emoji Prefix Installer${NC}"

# check if current directory is a Git repository
if [ ! -d ".git" ]; then
	echo -e "${RED}Error: The current directory is not a Git repository.${NC}"
	echo "Please run this script inside a Git repository..."
	exit 1
fi

# create prepare-commit-msg hook
mkdir -p .git/hooks

cat >.git/hooks/prepare-commit-msg <<'EOF'
#!/usr/bin/env bash

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

# get commit message
commit_msg=$(cat "$COMMIT_MSG_FILE")

# prefix and emoji mapping
declare -A emoji_map
emoji_map["chore"]="🛠️"
emoji_map["feat"]="✨"
emoji_map["fix"]="🐞"
emoji_map["docs"]="📚"
emoji_map["merge"]="🔀"
emoji_map["perf"]="🚀"
emoji_map["refactor"]="♻️"
emoji_map["style"]="💄"
emoji_map["test"]="🧪"

# detect prefix and add emoji
for prefix in "${!emoji_map[@]}"; do
  if [[ "$commit_msg" =~ ^($prefix)(\(.*\))?:\ .* ]]; then
    emoji="${emoji_map[$prefix]}"
    # find matched prefix in original message and add emoji
    new_msg=$(echo "$commit_msg" | sed "s/^$prefix/$emoji $prefix/")
    echo "$new_msg" > "$COMMIT_MSG_FILE"
    break
  fi
done
EOF

# add execution permission
chmod +x .git/hooks/prepare-commit-msg

echo -e "${GREEN}Git Emoji Prefix has been installed to the current repository!${NC}"
echo ""
echo -e "${YELLOW}Supported prefixes:${NC}"
echo "  - chore:     🛠️  Chores"
echo "  - feat:      ✨  New feature"
echo "  - fix:       🐞  Bug fix"
echo "  - docs:      📚  Documentation"
echo "  - merge:     🔀  Merge"
echo "  - perf:      🚀  Performance improvement"
echo "  - refactor:  ♻️  Refactoring"
echo "  - style:     💄  Styling"
echo "  - test:      🧪  Testing"
echo ""
echo -e "Example: ${GREEN}git commit -m \"feat: Add new feature\"${NC} → ${GREEN}\"✨ feat: Add new feature\"${NC}"
